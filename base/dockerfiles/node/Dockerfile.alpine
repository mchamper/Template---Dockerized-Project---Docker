ARG NODE_VERSION=latest
FROM node:${NODE_VERSION}-alpine

WORKDIR /docker/src
RUN chown -R node:node /docker
ENV PATH="/home/node/.local/bin:${PATH}"

##############################
##############################

# Install common dependencies
RUN apk add --update --no-cache \
  git \
  zip \
  unzip \
  openssh \
  openssl \
  putty \
  rsync \
  groff \
  ffmpeg \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

# Install image libraries
RUN apk add --update --no-cache \
  freetype \
  freetype-dev \
  libjpeg-turbo \
  libjpeg-turbo-dev \
  libpng \
  libpng-dev \
  libzip \
  libzip-dev \
  build-base \
  libc6-compat \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

# Install python and aws cli
RUN apk add --update --no-cache python2; exit 0
RUN apk add --update --no-cache \
  python3 \
  py3-pip \
  py3-pynacl \
  python3-dev libffi-dev openssl-dev musl-dev gcc make \
  && pip3 install --upgrade pip \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

##############################
##############################

# Install node dependencies
ARG NPM_VERSION=latest
ARG ANGULAR_VERSION=latest
ARG IONIC_VERSION=latest
RUN npm i -g npm@${NPM_VERSION}
RUN npm i -g @angular/cli@${ANGULAR_VERSION}
RUN npm i -g @ionic/cli@${IONIC_VERSION}
RUN npm i -g npm-check-updates
RUN npm i -g cordova-res --unsafe-perm; exit 0

USER node

# Install aws cli
RUN pip3 install awscli --upgrade --user && pip3 install awsebcli --upgrade --user
