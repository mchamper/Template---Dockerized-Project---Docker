ARG PHP_VERSION=latest
FROM php:${PHP_VERSION}-alpine

WORKDIR /docker/src
RUN addgroup docker && adduser -D docker -u 1000 -G root -G www-data
RUN chown -R docker:docker /docker
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
ENV PATH="/home/docker/.local/bin:${PATH}"

##############################
##############################

# Install common dependencies
RUN apk add --update --no-cache \
  bash \
  git \
  zip \
  unzip \
  openssh \
  openssl \
  putty \
  rsync \
  groff \
  ffmpeg \
  supervisor \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

# Install image libraries
RUN apk add --update --no-cache \
  freetype \
  freetype-dev \
  libjpeg-turbo \
  libjpeg-turbo-dev \
  libpng \
  libpng-dev \
  libzip \
  libzip-dev \
  build-base \
  libc6-compat \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

# Install python
RUN apk add --update --no-cache python2; exit 0
RUN apk add --update --no-cache \
  python3 \
  py3-pip \
  py3-pynacl \
  python3-dev libffi-dev openssl-dev musl-dev gcc make \
  && python3 -m venv $VIRTUAL_ENV \
  && pip install --upgrade pip \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

##############################
##############################

# Install php dependencies
RUN docker-php-ext-install \
  pdo \
  pdo_mysql \
  mysqli \
  zip \
  exif
RUN docker-php-ext-configure gd \
  --with-freetype=/usr/include/ \
  # --with-png=/usr/include/ \
  --with-jpeg=/usr/include/ \
  && docker-php-ext-install gd \
  && docker-php-ext-enable gd \
  && docker-php-ext-install pcntl \
  && docker-php-ext-enable pcntl \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*

# Install pgsql
RUN apk add --update --no-cache \
  libpq-dev \
  && docker-php-ext-configure pgsql --with-pgsql=/usr/local/pgsql \
  && docker-php-ext-install pdo_pgsql pgsql

# Install Microsoft SQL driver
RUN curl -O https://download.microsoft.com/download/7/6/d/76de322a-d860-4894-9945-f0cc5d6a45f8/msodbcsql18_18.4.1.1-1_amd64.apk
RUN curl -O https://download.microsoft.com/download/7/6/d/76de322a-d860-4894-9945-f0cc5d6a45f8/mssql-tools18_18.4.1.1-1_amd64.apk

RUN apk add --update --no-cache --allow-untrusted --virtual .phpize-deps $PHPIZE_DEPS \
  msodbcsql18_18.4.1.1-1_amd64.apk \
  mssql-tools18_18.4.1.1-1_amd64.apk \
  unixodbc-dev \
  && pecl install sqlsrv pdo_sqlsrv swoole \
  && docker-php-ext-enable --ini-name 30-sqlsrv.ini sqlsrv \
  && docker-php-ext-enable --ini-name 35-pdo_sqlsrv.ini pdo_sqlsrv \
  && docker-php-ext-enable --ini-name 40-swoole.ini swoole

# Install php memcached
RUN apk add --update --no-cache \
  libmemcached \
  libmemcached-dev \
  && rm -rf /var/cache/apk/* && rm -rf /tmp/*
RUN git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached \
  && docker-php-ext-configure /usr/src/php/ext/memcached \
  && docker-php-ext-install /usr/src/php/ext/memcached \
  && rm -rf /usr/src/php/ext/memcached

# Install composer
ARG COMPOSER_VERSION=
RUN curl -sL https://getcomposer.org/installer | php -- --install-dir /usr/bin --filename composer
RUN composer self-update ${COMPOSER_VERSION}

# PHP ini options
COPY php.ini /usr/local/etc/php/conf.d/local.ini

# Install aws cli
RUN pip install --upgrade awscli
RUN pip install --upgrade awsebcli
RUN pip install --upgrade botocore

USER docker
