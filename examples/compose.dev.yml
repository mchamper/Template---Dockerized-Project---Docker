services:

  website:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "20"
        NPM_VERSION: "10"
        ANGULAR_VERSION: "18"
    command: /bin/sh -c "npm start -- --host 0.0.0.0; tail -f /dev/null"
    ports:
      - ${PORT}0001:4200
    volumes:
      - ./credentials/.ssh/:/home/node/.ssh/
      - ./credentials/.aws/:/home/node/.aws/
      - ${SRC_WEBSITE}:/docker/src
  website-dist:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: html
        NGINX_ROOT: /docker/src/dist/app
    ports:
      - ${PORT}0101:80
      - ${PORT}0201:443
    volumes:
      - ${SRC_WEBSITE}:/docker/src

  webapp:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "20"
        NPM_VERSION: "10"
        ANGULAR_VERSION: "18"
    command: /bin/sh -c "npm start -- --host 0.0.0.0; tail -f /dev/null"
    ports:
      - ${PORT}0002:4200
    volumes:
      - ./credentials/.ssh/:/home/node/.ssh/
      - ./credentials/.aws/:/home/node/.aws/
      - ${SRC_WEBAPP}:/docker/src
  webapp-dist:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: html
        NGINX_ROOT: /docker/src/dist/app
    ports:
      - ${PORT}0102:80
      - ${PORT}0202:443
    volumes:
      - ${SRC_WEBAPP}:/docker/src

  mobile:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "20"
        NPM_VERSION: "10"
        ANGULAR_VERSION: "18"
    command: /bin/sh -c "npm start -- --host 0.0.0.0; tail -f /dev/null;"
    ports:
      - ${PORT}0003:8100
    volumes:
      - ${SRC_MOBILE}:/docker/src

  backoffice:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "20"
        NPM_VERSION: "10"
        ANGULAR_VERSION: "18"
    command: /bin/sh -c "npm start -- --host 0.0.0.0; tail -f /dev/null"
    ports:
      - ${PORT}0004:4200
    volumes:
      - ./credentials/.ssh/:/home/node/.ssh/
      - ./credentials/.aws/:/home/node/.aws/
      - ${SRC_BACKOFFICE}:/docker/src
  backoffice-dist:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: html
        NGINX_ROOT: /docker/src/dist/app
    ports:
      - ${PORT}0104:80
      - ${PORT}0204:443
    volumes:
      - ${SRC_BACKOFFICE}:/docker/src

  backend:
    build:
      context: ./base/dockerfiles/php
      dockerfile: Dockerfile.alpine
      args:
        PHP_VERSION: "8.2.8-fpm"
        COMPOSER_VERSION: --2
    volumes:
      - ./credentials/.ssh/:/home/docker/.ssh/
      - ./credentials/.aws/:/home/docker/.aws/
      - ${SRC_BACKEND}:/docker/src
  backend-server:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: php
        NGINX_ROOT: /docker/src/public
    links:
      - backend:php
    ports:
      - ${PORT}0011:80
      - ${PORT}0111:443
    volumes:
      - ${SRC_BACKEND}:/docker/src
  backend-cronjob-server:
    build:
      context: ./base/dockerfiles/php
      dockerfile: Dockerfile.alpine
      args:
        PHP_VERSION: "8.2.8-fpm"
        COMPOSER_VERSION: --2
    user: root
    command: /bin/sh -c "crontab /etc/cron.d/crontab; crond -f; tail -f /dev/null"
    volumes:
      - ./base/dockerfiles/php/laravel-schedule.crontab:/etc/cron.d/crontab
      - ${SRC_BACKEND}:/docker/src
  backend-queue-server:
    build:
      context: ./base/dockerfiles/php
      dockerfile: Dockerfile.alpine
      args:
        PHP_VERSION: "8.2.8-fpm"
        COMPOSER_VERSION: --2
    user: root
    command: /bin/sh -c "supervisord -c /etc/supervisord.conf; tail -f /dev/null"
    volumes:
      - ./base/dockerfiles/php/supervisor/conf.d/laravel-queues.conf:/etc/supervisord.conf
      - ${SRC_BACKEND}:/docker/src
  backend-websocket-server:
    build:
      context: ./base/dockerfiles/php
      dockerfile: Dockerfile.alpine
      args:
        PHP_VERSION: "8.2.8-fpm"
        COMPOSER_VERSION: --2
    command: /bin/sh -c "php artisan websockets:serve; tail -f /dev/null"
    volumes:
      - ${SRC_BACKEND}:/docker/src

  mail-server:
    build:
      context: ./base/dockerfiles/mailpit
      dockerfile: Dockerfile
    environment:
      MP_MAX_MESSAGES: 5000
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    ports:
      - ${PORT}0015:8025
      - ${PORT}0115:1025

  database:
    build:
      context: ./base/dockerfiles/mariadb
      args:
        MARIADB_VERSION: "11.0.2"
    environment:
      MYSQL_USER: ${DB_USER:-admin}
      MYSQL_PASSWORD: ${DB_PASS:-root}
      MYSQL_ROOT_PASSWORD: ${DB_PASS:-root}
      MYSQL_DATABASE: ${DB_NAME:-main}
    ports:
      - ${PORT}0021:3306
    volumes:
      - ./database-exports/:/docker/exports/
      - database:/var/lib/mysql

  # database:
  #   build:
  #     context: ./base/dockerfiles/postgres
  #     args:
  #       POSTGRES_VERSION: "15.3"
  #   environment:
  #     POSTGRES_USER: ${DB_USER:-admin}
  #     POSTGRES_PASSWORD: ${DB_PASS:-root}
  #     POSTGRES_DB: ${DB_NAME:-main}
  #   ports:
  #     - ${PORT}0021:5432
  #   volumes:
  #     - ./database-exports/:/docker/exports/
  #     - database:/var/lib/postgresql/data

  0-utils:
    build:
      context: ./base/dockerfiles/alpine
      dockerfile: Dockerfile
      args:
        ALPINE_VERSION: "3.18.4"
    command: /bin/sh -c "tail -f /dev/null"
    volumes:
      - ./credentials/.ssh/:/home/docker/.ssh/
      - ./credentials/.aws/:/home/docker/.aws/
      - ./environments/:/docker/environments/

  0-aws:
    build:
      context: ./base/dockerfiles/aws
      dockerfile: Dockerfile.alpine
    command: /bin/sh -c "tail -f /dev/null"
    volumes:
      - ./credentials/.ssh/:/home/docker/.ssh/
      - ./credentials/.aws/:/home/docker/.aws/
      - ./environments/:/docker/environments/
      - ${SRC_BACKOFFICE}:/docker/src/backoffice
      - ${SRC_BACKEND}:/docker/src/backend

volumes:
  database:

networks:
  dp-locust_default:
    external: true
