version: '3'

services:

  web:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "18"
        NPM_VERSION: "9"
        ANGULAR_VERSION: "16"
    command: /bin/sh -c "npm start -- --host 0.0.0.0; tail -f /dev/null"
    ports:
      - ${PORT}0001:4200
    volumes:
      - ./credentials/.ssh/:/home/node/.ssh/
      - ./credentials/.aws/:/home/node/.aws/
      - ${SRC_WEB}:/docker/src

  web-dist-server:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: html
        NGINX_ROOT: /docker/src/dist/app
    ports:
      - ${PORT}0101:80
      - ${PORT}1101:443
    volumes:
      - ${SRC_WEB}:/docker/src

  web-dist-ssr:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "18"
        NPM_VERSION: "9"
        ANGULAR_VERSION: "16"
    command: /bin/sh -c "npm run serve:ssr; tail -f /dev/null"
    volumes:
      - ${SRC_WEB}:/docker/src
  web-dist-ssr-server:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: node
    links:
      - web-dist-ssr:node
    ports:
      - ${PORT}0201:80
      - ${PORT}1201:443
    volumes:
      - ${SRC_WEB}:/docker/src

  mobile:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "18"
        NPM_VERSION: "9"
        ANGULAR_VERSION: "16"
        IONIC_VERSION: "7"
    command: /bin/sh -c "npm start; tail -f /dev/null;"
    ports:
      - ${PORT}0002:8100
    volumes:
      - ${SRC_MOBILE}:/docker/src

  backoffice:
    build:
      context: ./base/dockerfiles/node
      dockerfile: Dockerfile.alpine
      args:
        NODE_VERSION: "18"
        NPM_VERSION: "9"
        ANGULAR_VERSION: "16"
    command: /bin/sh -c "npm start -- --host 0.0.0.0 --port 3000; tail -f /dev/null"
    ports:
      - ${PORT}0003:3000
    volumes:
      - ./credentials/.ssh/:/home/node/.ssh/
      - ./credentials/.aws/:/home/node/.aws/
      - ${SRC_BACKOFFICE}:/docker/src

  backoffice-dist-server:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: html
        NGINX_ROOT: /docker/src/dist/app
    ports:
      - ${PORT}0103:80
      - ${PORT}1103:443
    volumes:
      - ${SRC_BACKOFFICE}:/docker/src

  backend:
    build:
      context: ./base/dockerfiles/php
      dockerfile: Dockerfile.alpine
      args:
        PHP_VERSION: 8.2.8-fpm
        COMPOSER_VERSION: --2
    ports:
      - ${PORT}0011:9000
      - ${PORT}5011:8089
    volumes:
      - ./credentials/.ssh/:/home/docker/.ssh/
      - ./credentials/.aws/:/home/docker/.aws/
      - ${SRC_BACKEND}:/docker/src
  backend-server:
    build:
      context: ./base/dockerfiles/nginx
      dockerfile: Dockerfile.alpine
      args:
        NGINX_VERSION: "1.23.2"
        NGINX_CONF: php
        NGINX_ROOT: /docker/src/public
    links:
      - backend:php
    ports:
      - ${PORT}0111:80
      - ${PORT}1111:443
    volumes:
      - ${SRC_BACKEND}:/docker/src
    networks:
      - default
      # - dp-locust_default

  database:
    build:
      context: ./base/dockerfiles/mariadb
      args:
        MARIADB_VERSION: "11.0.2"
    environment:
      MYSQL_USER: ${DB_USER:-admin}
      MYSQL_PASSWORD: ${DB_PASS:-root}
      MYSQL_ROOT_PASSWORD: ${DB_PASS:-root}
      MYSQL_DATABASE: ${DB_NAME:-main}
    ports:
      - ${PORT}0021:3306
    volumes:
      - ./database-exports/:/docker/exports/
      - database:/var/lib/mysql

  # database:
  #   build:
  #     context: ./base/dockerfiles/postgres
  #     args:
  #       POSTGRES_VERSION: "15.3"
  #   environment:
  #     POSTGRES_USER: ${DB_USER:-admin}
  #     POSTGRES_PASSWORD: ${DB_PASS:-root}
  #     POSTGRES_DB: ${DB_NAME:-main}
  #   ports:
  #     - ${PORT}0021:5432
  #   volumes:
  #     - ./database-exports/:/docker/exports/
  #     - database:/var/lib/postgresql/data

volumes:
  database:

networks:
  dp-locust_default:
    external: true
