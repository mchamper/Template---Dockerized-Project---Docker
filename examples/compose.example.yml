version: '3.9'

services:

  web:
    build:
      context: ./base/dockerfiles/node
      args:
        NODE_VERSION: 16
        NPM_VERSION: 8
        ANGULAR_VERSION: 13
    command: ng serve --host 0.0.0.0
    ports:
      - 10001:4200
    volumes:
      - ${SRC_WEB}:/home/node/app
    networks:
      - network-a
    restart: unless-stopped

  mobile:
    build:
      context: ./base/dockerfiles/node
      args:
        NODE_VERSION: 16
        NPM_VERSION: 7
        ANGULAR_VERSION: 12
        IONIC_VERSION: 6
    command: ng serve --host 0.0.0.0 --port 8100
    ports:
      - 10002:8100
    volumes:
      - ${SRC_MOBILE}:/home/node/app
    networks:
      - network-a
    restart: unless-stopped

  backoffice:
    build:
      context: ./base/dockerfiles/node
      args:
        NODE_VERSION: 16
        NPM_VERSION: 8
    command: yarn start
    ports:
      - 10005:3000
    volumes:
      - ${SRC_BACKOFFICE}:/home/node/app
    networks:
      - network-a
    restart: unless-stopped

  backend:
    build:
      context: ./base/dockerfiles/nginx
      args:
        NGINX_VERSION: 1.21.4
    depends_on:
      - backend-php
      - database
    ports:
      - 10011:80
    volumes:
      - ./base/dockerfiles/nginx/php.default.conf:/etc/nginx/conf.d/default.conf
      - ${SRC_BACKEND}:/var/www/html
    networks:
      - network-a
    restart: unless-stopped

  backend-php:
    build:
      context: ./base/dockerfiles/php
      args:
        PHP_VERSION: 8.0.13-fpm
    ports:
      - 10012:9000
    volumes:
      - ./base/dockerfiles/php/php.ini:/usr/local/etc/php/php.ini
      - ${SRC_BACKEND}:/var/www/html
    networks:
      - network-a
    restart: unless-stopped

  database:
    build:
      context: ./base/dockerfiles/postgres
      args:
        POSTGRES_VERSION: 14.1
    environment:
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASS:-root}
      POSTGRES_DB: ${DB_NAME:-public}
    ports:
      - 10021:5432
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - network-a
    restart: unless-stopped

  # database:
  #   build:
  #     context: ./base/dockerfiles/mariadb
  #     args:
  #       MARIADB_VERSION: 10.4
  #   environment:
  #     MYSQL_USER: ${DB_USER:-admin}
  #     MYSQL_PASSWORD: ${DB_PASS:-root}
  #     MYSQL_ROOT_PASSWORD: ${DB_PASS:-root}
  #     MYSQL_DATABASE: ${DB_NAME:-public}
  #   ports:
  #     - 10021:3306
  #   volumes:
  #     - database:/var/lib/mysql
  #   networks:
  #     - network-a
  #   restart: unless-stopped

  database-pgadmin:
    build:
      context: ./base/dockerfiles/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - 10022:80
    volumes:
      - database-pgadmin:/var/lib/pgadmin
    networks:
      - network-a
    restart: unless-stopped

networks:
  network-a:
    driver: bridge

volumes:
  database:
  database-pgadmin:
